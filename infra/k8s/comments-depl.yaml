# K8s is extensible - we can add in our own custom objects. This specifies the et of object we want K8s to look at.
apiVersion: apps/v1

# Type of object we want to create
kind: Deployment

# Config options for the object we are about to create
metadata:
  # We can use whatever name we want
  name: comments-depl

# the exact attibutes we want to apply to object
spec:
  # Number of pods running some particular image
  replicas: 1
  # Match al pods with label ("app" => "comments")
  selector:
    matchLabels:
      app: comments
  # Exact configuration of the object that the deployment is going to make
  template:
    metadata:
      # Labels asociated to this template
      labels:
        app: comments
    # This is another spec (just like it's parent). Here I create a container
    spec:
      containers:
        - name: post
          # image: peretch/microservices_comments:0.0.5
          # If we use latest tag, the image must be pushed in docker hub
          image: peretch/microservices_comments:latest
---
# HERE CLUSTER IP CONFIGURATION
# COULD BE IN A DIFFERENT CONFIG FILE
apiVersion: v1
kind: Service
metadata:
  name: comments-srv
spec:
  selector:
    app: comments
  type: ClusterIP
  ports:
    - name: comments
      protocol: TCP
      port: 4001
      targetPort: 4001
